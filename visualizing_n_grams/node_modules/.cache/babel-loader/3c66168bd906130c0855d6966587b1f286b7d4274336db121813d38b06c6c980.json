{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mindf\\\\Documents\\\\PROFESSIONAL\\\\WORK\\\\RESEARCH\\\\visualizing_n_grams\\\\src\\\\Generate_Dict.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = \"http://localhost:3001\";\nexport default function GenerateDict() {\n  _s();\n  //Model type\n  let [model_type, setModelType] = useState(\"Bi-gram\");\n  //Input text\n  let [input_text, setInputText] = useState(\"\");\n  //N-gram dictionary\n  let [returned_dict, setReturnedDict] = useState({});\n  //Branching factor and length of dictionary (to diisplay as statistics)\n  let [branching_factor, setBranchingFactor] = useState(0);\n  let [len_dict, setLenDict] = useState(0);\n  //When text is entered into the textarea\n  const textRetrieval = text => {\n    //Set input text\n    setInputText(text.target.value);\n  };\n  //When a model option is selected\n  const modelSelect = selection => {\n    console.log(model_type);\n    //Save model type\n    setModelType(selection.target.value);\n    console.log(selection.target.value);\n  };\n\n  //When the generate button is clicked\n  const generate_ngram_dict = () => {\n    //Send a POST request to the backend with the input text and model type\n    const postText = {\n      \"input_text\": input_text,\n      \"n_gram_type\": model_type\n    };\n    //Post configuration\n    const postConfig = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    //Post\n    axios.post(\"/generate-ngram-dictionary\", postText, postConfig).then(response => {\n      //Set bigram dictionary\n      setReturnedDict(response.data[\"gram_dict\"]);\n      //Set branching factor\n      setBranchingFactor(response.data[\"b_factor\"]);\n      //Set dict length\n      setLenDict();\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  //HTML\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-processing\",\n    class: \"flex flex-col space-y-5 h-3/6 w-full items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-entrance-text\",\n      class: \"font-bold\",\n      children: \"Enter a sample passage below and choose an n-gram model to get started:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"gram-model-text\",\n      type: \"textarea\",\n      defaultValue: \"Paste your passage here...\",\n      onChange: textRetrieval,\n      class: \"rounded-md p-2 h-5/6 w-8/12 outline outline-slate-200 focus:outline-none focus:ring focus:border-slate-500 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"n-gram-selection\",\n      class: \"flex flex-row space-x-4 w-3/6 align-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"\",\n        children: \"Select n-gram type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"n-gram-model-type\",\n        id: \"n-gram-model-type\",\n        defaultValue: \"bi-gram\",\n        onChange: modelSelect,\n        class: \"h-fit w-2/6 rounded-md outline outline-slate-200 outline-3 focus:outline-none focus:ring text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Bi-gram\"\n        }, \"bi-gram\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Tri-gram\"\n        }, \"tri-gram\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Tetra-gram\"\n        }, \"tetra-gram\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"build-ngram-dict\",\n      onClick: generate_ngram_dict,\n      class: \"bg-black text-white font-bold rounded-md w-2/12 h-10 outline outline-1 hover:bg-slate-700 hover:ring\",\n      children: \"Build Dictionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(GenerateDict, \"XSiNoFs6A+RnelCDuBOmyXz2nJw=\");\n_c = GenerateDict;\nvar _c;\n$RefreshReg$(_c, \"GenerateDict\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","defaults","baseURL","GenerateDict","_s","model_type","setModelType","input_text","setInputText","returned_dict","setReturnedDict","branching_factor","setBranchingFactor","len_dict","setLenDict","textRetrieval","text","target","value","modelSelect","selection","console","log","generate_ngram_dict","postText","postConfig","headers","post","then","response","data","catch","error","className","class","children","fileName","_jsxFileName","lineNumber","columnNumber","type","defaultValue","onChange","name","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mindf/Documents/PROFESSIONAL/WORK/RESEARCH/visualizing_n_grams/src/Generate_Dict.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3001\"\r\n\r\nexport default function GenerateDict(){\r\n    //Model type\r\n    let [model_type, setModelType] = useState(\"Bi-gram\");\r\n    //Input text\r\n    let [input_text, setInputText] = useState(\"\");\r\n    //N-gram dictionary\r\n    let [returned_dict, setReturnedDict] = useState({})\r\n    //Branching factor and length of dictionary (to diisplay as statistics)\r\n    let [branching_factor, setBranchingFactor] = useState(0);\r\n    let [len_dict, setLenDict] = useState(0);\r\n    //When text is entered into the textarea\r\n    const textRetrieval = (text) => {\r\n        //Set input text\r\n        setInputText(text.target.value)\r\n    }\r\n    //When a model option is selected\r\n    const modelSelect = (selection) => {\r\n        console.log(model_type);\r\n        //Save model type\r\n        setModelType(selection.target.value);\r\n        console.log(selection.target.value);\r\n    }\r\n\r\n    //When the generate button is clicked\r\n    const generate_ngram_dict = () => {\r\n        //Send a POST request to the backend with the input text and model type\r\n        const postText = {\r\n            \"input_text\" : input_text,\r\n            \"n_gram_type\" : model_type,\r\n        };\r\n        //Post configuration\r\n        const postConfig = {\r\n            headers : {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        };\r\n        //Post\r\n        axios.post(\"/generate-ngram-dictionary\", postText, postConfig)\r\n        .then((response) => {\r\n            //Set bigram dictionary\r\n            setReturnedDict(response.data[\"gram_dict\"])\r\n            //Set branching factor\r\n            setBranchingFactor(response.data[\"b_factor\"])\r\n            //Set dict length\r\n            setLenDict()\r\n            console.log(response.data)\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    };\r\n    //HTML\r\n    return (\r\n        <div className = \"text-processing\" class = \"flex flex-col space-y-5 h-3/6 w-full items-center justify-center\" >\r\n          <p className = \"text-entrance-text\" class = \"font-bold\">Enter a sample passage below and choose an n-gram model to get started:</p>\r\n          <textarea className = \"gram-model-text\" type = \"textarea\" defaultValue = \"Paste your passage here...\" onChange = {textRetrieval} class = \"rounded-md p-2 h-5/6 w-8/12 outline outline-slate-200 focus:outline-none focus:ring focus:border-slate-500 \"></textarea>\r\n          <div className = \"n-gram-selection\" class = \"flex flex-row space-x-4 w-3/6 align-center justify-center\">\r\n            <label class = \"\">Select n-gram type:</label>\r\n              <select name = \"n-gram-model-type\" id = \"n-gram-model-type\" defaultValue = \"bi-gram\" onChange = {modelSelect} class = \"h-fit w-2/6 rounded-md outline outline-slate-200 outline-3 focus:outline-none focus:ring text-center\">\r\n                <option key = \"bi-gram\">Bi-gram</option>\r\n                <option key = \"tri-gram\">Tri-gram</option>\r\n                <option key = \"tetra-gram\">Tetra-gram</option>\r\n              </select>\r\n          </div>\r\n          <button className = \"build-ngram-dict\" onClick = {generate_ngram_dict} class = \"bg-black text-white font-bold rounded-md w-2/12 h-10 outline outline-1 hover:bg-slate-700 hover:ring\">Build Dictionary</button>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}